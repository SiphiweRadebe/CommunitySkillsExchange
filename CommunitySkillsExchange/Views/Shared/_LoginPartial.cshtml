@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="User" asp-action="Profile" asp-route-id="@UserManager.GetUserId(User)">
                <i class="bi bi-person-circle"></i> Profile
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Message" asp-action="Index">
                <i class="bi bi-envelope"></i> Messages
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">
                    <i class="bi bi-box-arrow-right"></i> Logout
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">
                <i class="bi bi-person-plus"></i> Register
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">
                <i class="bi bi-box-arrow-in-right"></i> Login
            </a>
        </li>
    }
</ul>